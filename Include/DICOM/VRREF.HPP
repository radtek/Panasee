// Referential Integrity Database Routines
//
// Used when you have multiple VR structures that all need to share
// the same data.
//
// This is a very specialized data structure that is used only for IOD
// Composite Objects.
//
// You should not use this data structure for any other purpose except
// for code generated by the CCOC compiler.  This data structure may change
// both it's implementation, and it's interface.  You have been warned!

// Purposes:
//
//
// Supports a more complicated inhertience/inclusion hiearchy than C++
// supports.  Several aspects of DICOM IOD modules fall outside the scope
// of any elegent implementation in C++.  There are a number of ways
// to implement IOD support, and I refer the read to my article on the
// subject....
//
// Second, it makes for much faster SetIf/Morph procedures than were
// previsuously implemented.
//
//


class	VRReferentialIntegrityDatabase;

class	VRReferentialIntegrityDatabaseElement
	{
	public:
		UINT16			Group;
		UINT16			Element;
		VR				*MasterVR;
		Array < VR * >	*VRReferences;

	public:
		BOOL			SetMaster ( VR *,
				VRReferentialIntegrityDatabase *);
		BOOL			AddReference (VR *,
				VRReferentialIntegrityDatabase *);
		BOOL			Sync ();
			VRReferentialIntegrityDatabaseElement ();
			~VRReferentialIntegrityDatabaseElement ();
	};

class	CCO_Abstract;
class	VRReferentialIntegrityDatabase
	{
	public:
		CCO_Abstract	*LinkUp;
		BOOL	AmBuilding;
		FixedArray < UINT32, VRReferentialIntegrityDatabaseElement * >	*VRArray;
		Array < VRReferentialIntegrityDatabaseElement * >		VRBuildArray;

	// Construction
	virtual	VRReferentialIntegrityDatabaseElement	*Addframe (UINT16, UINT16);
	virtual	BOOL	AddReference (VR *);
	virtual	BOOL	Sync ();
	virtual	BOOL	Build();
	virtual	BOOL	UnBuild();
			VRReferentialIntegrityDatabase ();
			virtual	~VRReferentialIntegrityDatabase ();

	// Use
	virtual	BOOL	SetMaster(UINT16, UINT16, void *, UINT32);
	virtual	BOOL	SetMaster(VR *);
	virtual	BOOL	ClearMaster(UINT16, UINT16);
	virtual	BOOL	Sync ( UINT16, UINT16 );
	virtual	VRReferentialIntegrityDatabaseElement *GetVREF(UINT16, UINT16);
	};

