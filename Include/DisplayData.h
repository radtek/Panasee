#if !defined(__MRI_IMAGE_DISPLAY_H__)
#define __MRI_IMAGE_DISPLAY_H__

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include "LUT.h"
#include "IGTImageHeader.h"

// Generate BMP from the raw data of an image

class __declspec(dllexport) CGenerateBmpOfImage
{
public:
	CGenerateBmpOfImage();
	virtual ~CGenerateBmpOfImage();

public:
	// nWidthOfImage[in] ¡ª width of an image
	// nHeightOfImage[in] ¡ª height of an image
	// pnDataOfImage[in] ¡ª data of an image
	// nWidth[in] ¡ª ´°¿í
	// nLevel[in] ¡ª ´°Î»		
	// retrun£ºBMP object
    CBitmap* GetBitmapByDataOfImage( short nWidthOfImage, short nHeightOfImage, IGT_IMG_DATA_TYPE* pnDataOfImage,
		int nWidth = 4096, int nLevel = 2048, CDC* pPaintDC =NULL );

	CBitmap* GetBitmapByDataOfImage(short nWidthOfImage, short nHeightOfImage, BYTE* pnDataOfImage,
		short nWidth = 4096, short nLevel = 2048 );

private:

	CBitmap*	m_pBitmap;
	
};

// Display the BMP to UI generated by function CGenerateBmpOfImage::GetBitmapByDataOfImage

class __declspec(dllexport) CDisplayBmpOfImage
{
public:
	CDisplayBmpOfImage();
	virtual ~CDisplayBmpOfImage();
	
public:
	// nWidthOfImage[in] ¡ª width of a BMP
	// nHeightOfImage[in] ¡ª height of a BMP
	// pBitmap[in] ¡ª object of a BMP
	// pPaintDC[in] ¡ª Device context
    void DisplayBitmap( short nWidthOfImage, short nHeightOfImage, CBitmap* pBitmap, 
		CDC* pPaintDC,CRect rcPaint );

	void StretchBitmap( short nWidthOfImage, short nHeightOfImage, CBitmap* pBitmap,
		CDC* pPaintDC,CRect rcPaint, short nWidthOfDisplay, short nHeightOfDisplay);
	
};

#endif // !defined(__MRI_IMAGE_DISPLAY_H__)
